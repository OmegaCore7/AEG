package data.hullmods;

import com.fs.starfarer.api.Global;
import com.fs.starfarer.api.combat.MutableShipStatsAPI;
import com.fs.starfarer.api.combat.ShipAPI;
import com.fs.starfarer.api.combat.WeaponAPI;
import com.fs.starfarer.api.impl.hullmods.BaseHullMod;

public class AEG_PowerRegulationMatrix extends BaseHullMod {

    private static final float CRITICAL_HULL_THRESHOLD = 0.3f;
    private static final float CRITICAL_FLUX_THRESHOLD = 0.75f;
    private static final float CRITICAL_BURST_DURATION = 10f; // Duration of the burst in seconds

    @Override
    public void applyEffectsBeforeShipCreation(ShipAPI.HullSize hullSize, MutableShipStatsAPI stats, String id) {
        stats.getSystemCooldownBonus().modifyMult(id, 1.3f); // Increase system cooldown by 30%
        stats.getBallisticWeaponFluxCostMod().modifyMult(id, 1.25f); // Increase weapon flux cost by 25%
        stats.getEnergyWeaponFluxCostMod().modifyMult(id, 1.25f); // Increase weapon flux cost by 25%
        stats.getMissileWeaponFluxCostMod().modifyMult(id, 1.25f); // Increase weapon flux cost by 25%
        stats.getShieldUpkeepMult().modifyMult(id, 1.5f); // Increase shield upkeep by 50%
        stats.getMaxSpeed().modifyMult(id, 0.9f); // Reduce top speed by 10%
    }

    @Override
    public void applyEffectsAfterShipCreation(ShipAPI ship, String id) {
        // Additional effects can be applied here if needed
    }

    @Override
    public void advanceInCombat(ShipAPI ship, float amount) {
        if (ship.getHullLevel() < CRITICAL_HULL_THRESHOLD || ship.getFluxTracker().getFluxLevel() > CRITICAL_FLUX_THRESHOLD) {
            ship.getMutableStats().getMaxSpeed().modifyFlat("critical_burst", 50f);
            ship.getMutableStats().getBallisticWeaponDamageMult().modifyMult("critical_burst", 1.25f);
            ship.getMutableStats().getEnergyWeaponDamageMult().modifyMult("critical_burst", 1.25f);
            ship.getMutableStats().getMissileWeaponDamageMult().modifyMult("critical_burst", 1.25f);
            ship.getMutableStats().getShieldUpkeepMult().modifyMult("critical_burst", 0.5f); // Reduce shield upkeep by 50%
            Global.getCombatEngine().addFloatingText(ship.getLocation(), "Critical Burst Activated!", 30, Color.RED, ship, 1f, 2f);
        } else {
            ship.getMutableStats().getMaxSpeed().unmodify("critical_burst");
            ship.getMutableStats().getBallisticWeaponDamageMult().unmodify("critical_burst");
            ship.getMutableStats().getEnergyWeaponDamageMult().unmodify("critical_burst");
            ship.getMutableStats().getMissileWeaponDamageMult().unmodify("critical_burst");
            ship.getMutableStats().getShieldUpkeepMult().unmodify("critical_burst");
        }
    }

    @Override
    public String getDescriptionParam(int index, ShipAPI.HullSize hullSize) {
        if (index == 0) return "20% less energy consumption for Plasma Jets and Fortress Shield";
        if (index == 1) return "30% longer system cooldown";
        if (index == 2) return "25% more flux generated by weapons";
        if (index == 3) return "50% increased shield upkeep";
        if (index == 4) return "10% reduced top speed when Plasma Jets are active";
        if (index == 5) return "temporary boost in speed, damage, and shield efficiency in critical situations";
        return null;
    }
}
